


Objective : 
1. Building a system that supports 1 users
2. Scaling it up to serve million of users


Requirement - 
- Server serves both to web and mobile apps


Building step by step:-
There is always area of endless improvement and gradual refinement

1. Single Server Setup

- Everything is running on same server
  - Web Server 
  - Database
  - Cache




2. Separating Web and Data Tier

- Separation allows them to be scaled independently
- Choosing between SQL and NOSQL based on specific use case



3. Horizontal(Scale out) VS Vertical(Scale up) Scaling

- Vertical - no failover and redundancy, hard limit 
- Horizontal - Desirable in large scale application




4. Load Balancer

- LB evenly distributes the incoming request among web server
- Client is connected through public IP of LB and web server has private IP





5. DataBase Replication

- Divides the data tier into master-slave
- All write operation must be sent to Master 
- All read operation must be sent to Slave




6. Cache

- Cache is temporary storage that stores the result of expensive operation or frequently accessed data
  so that subsequent request are served more quickly
- Read about Memcached  




7. CDN
- Sharing static asssets directly from proximate CDN, hence improving the inital load time


8. Choose Stateless webtier for better scaling

9. Scale to multi data center setup with geoDNS

9a. Add message queue if required

10. Adds tools like logging, metrics,montioring and automation

11. Scaling Data Tier
- Sharding of database is accepted approach


